#!/usr/bin/python3
"""
Extend your Python script to export data in the JSON format.
"""

import json
import requests
import os.path import exists
from sys import argv


def get_employee_data(employee_id):
    # Fetch employee data from the JSONPlaceholder API
    user_url = (
            "https://jsonplaceholder.typicode.com/users/{}"
            .format(employee_id)
    )
    response_user = requests.get(user_url)
    user_data = response_user.json()
    employee_username = user_data.get("username")

    # Fetch todos data for the specific employee from JSONPlacholder
    todos_url = (
            "https://jsonplaceholder.typicode.com/todos?userId={}"
            .format(employee_id)
    )
    response_todos = requests.get(todos_url)
    todos_data = response_todos.json()

    # Create a list of tasks for employee
    tasks = []
    for todo in todos_data:
        task_dict = {
                "username": employee_username,
                "task": todo["title"],
                "completed": todo["completed"]
        }
        tasks.append(task_dict)

    return tasks


def write_to_json(data):
    # Export the data to todo_all_employees.json
    with open("todo_all_employees.json", "w") as json_file:
        json.dump(data, json_file, indent=4)


if __name__ == "__main__":
    # Check if an employee ID is provided
    if len(argv) == 2 and argv[1].isdigit():
        employee_id = argv[1]
    else:
        print("Usage: {} EMPLOYEE_ID".format(argv[0]))
        exit(1)

    # Fetch employee data for the specified ID
    employee_data = get_employee_data(employee_id)

    # Load existing data form all todo_all_employees
    try:
        with open("todo_all_employees.json", "r") as json_file:
            existing_data = json.load(json_file)
    except FileNotFoundError:
        existing_data = {}

    # Update existing data with the new emploee data
    existing_data.update({employee_id: employee_data})

    # Write the updated data to todo_allemployees
    write_to_json(existing_data)
